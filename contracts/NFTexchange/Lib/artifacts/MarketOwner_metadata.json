{
	"compiler": {
		"version": "0.8.17+commit.8df45f5f"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"components": [
									{
										"internalType": "bytes4",
										"name": "assetClass",
										"type": "bytes4"
									},
									{
										"internalType": "bytes",
										"name": "data",
										"type": "bytes"
									}
								],
								"internalType": "struct LibAsset.AssetType",
								"name": "assetType",
								"type": "tuple"
							},
							{
								"internalType": "uint256",
								"name": "value",
								"type": "uint256"
							}
						],
						"internalType": "struct LibAsset.Asset",
						"name": "_asset",
						"type": "tuple"
					}
				],
				"name": "TransferFeeMarketOwner",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_fee",
						"type": "uint256"
					}
				],
				"name": "updateFeeMarket",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/NFTexchange/Lib/MarketOwner.sol": "MarketOwner"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
			"license": "MIT",
			"urls": [
				"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
				"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
			]
		},
		"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
			"license": "MIT",
			"urls": [
				"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
				"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
			"license": "MIT",
			"urls": [
				"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
				"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
			]
		},
		"contracts/NFTexchange/Lib/LibAsset.sol": {
			"keccak256": "0x84f3dc7ed7b0dd2117cde1ae01b361cb7063893b1ffff45d21f3b52c981e9f10",
			"license": "pirate",
			"urls": [
				"bzz-raw://798149e500b61cf72faba5b91d15bca79923f9df8e2eb4195d513e5df32184a3",
				"dweb:/ipfs/QmZsc9e4EAT9pTQHbMq2uL1A97VW8k9ekupazbLnNUiGv2"
			]
		},
		"contracts/NFTexchange/Lib/LibTransfer.sol": {
			"keccak256": "0xea8e9edbb0e8bedd539f07409f5999986014e1825f08be5be625c51551c750a6",
			"license": "pirate",
			"urls": [
				"bzz-raw://0fb9d5803c6f8e76203b4da22c9a29c523a0dc796e3a7ae6285f703ed4e4629e",
				"dweb:/ipfs/QmdTwC6XwRcSRJVGCzxZYA9pyV1NncoRWVtktmTgaCcRkp"
			]
		},
		"contracts/NFTexchange/Lib/MarketOwner.sol": {
			"keccak256": "0x3e8dd368ab3fbebc34ef2f67f662f1c3855b91e1c375f44ef7ad97174c423fe3",
			"license": "pirate",
			"urls": [
				"bzz-raw://d6a050fef4a9a60dabe8e2fca5aa679096ed2e252d32fa4ecafe6c88bf573774",
				"dweb:/ipfs/QmQpFVtPFot3FUuXU1aBzd1kZeX5VM3JhnexqGQHRvDpUd"
			]
		},
		"contracts/NFTexchange/Lib/interface/IMarketOwner.sol": {
			"keccak256": "0x52ec4070fce9244df6de5ee8e49117f9a692fede8dc1d5d3bef42bab139d001e",
			"license": "MIT",
			"urls": [
				"bzz-raw://f507f96e956047a51ad73dc7d98303f6c3ffaaac32179a46db586a01d02e94f4",
				"dweb:/ipfs/QmYcWQFhyD3fxNSkAJ86URipJiCRjE9oU8jpWBcazvXSyq"
			]
		}
	},
	"version": 1
}